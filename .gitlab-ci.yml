stages:
#- dich
- testing
#- code check
#  - test-api

cache:
  paths:
  - build
services:
  - docker:dind
variables:
  DOCKER_DRIVER: overlay2
  MYSQL_ROOT_PASSWORD: password
  MYSQL_DATABASE: test_db
  MYSQL_IMAGE: mysql:latest
.building: &building
  stage: build
  image: docker:stable
  services:
  - docker:dind
  before_script:
  - echo "${CI_JOB_TOKEN}" | docker login -u gitlab-ci-token --password-stdin "${CI_REGISTRY}"
  only:
  - master
  - develop

.building_script: &building_script |
  docker build \
      --pull \
      --compress \
      --cache-from ${IMAGE} \

image:nginx:
  <<: *building
  variables:
    DOCKERFILE: .docker/nginx/Dockerfile
  script:
  - export IMAGE=${MYSQL_IMAGE}
#  - export IMAGE_LATEST=${NGINX_IMAGE_LATEST}
  - *building_script


connect:
  stage: testing
  image: mysql
  script:
  - echo "SELECT 'OK';" | mysql --user=root --password="$MYSQL_ROOT_PASSWORD" --host=mysql "$MYSQL_DATABASE"

connect2:
  stage: testing
  image: mysql
  script:
  - echo "SELECT 'OK';" | mysql --user=root --password="$MYSQL_ROOT_PASSWORD" --host=localhost "$MYSQL_DATABASE"

connect3:
  stage: testing
  image: mysql
  script:
  - echo "SELECT 'OK';" | mysql --user=root --password="$MYSQL_ROOT_PASSWORD" --host=127.0.0.1 "$MYSQL_DATABASE"


#unit-tests:
#  stage: testing
#  image: ${CI_REGISTRY}/nexteum-user/nexteum-user-php:7.2-fpm-alpine-dev
#
#
#  cache:
#    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
#    paths:
#    - vendor/
##  before_script:
##  - eval $(ssh-agent -s)
##  - mkdir -p ~/.ssh
##  - echo "${SSH_PRIVATE_KEY}" | ssh-add -
##  - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
#  script:
#  - export APP_ENV=test
#  # Install DEVELOPMENT dependencies
#  - composer install --dev --optimize-autoloader --no-ansi --no-interaction --no-scripts
#  - cp ./phpunit.xml.dist ./phpunit.xml
#  - cp ./.env.test ./.env
#  - vendor/bin/phpunit --configuration ./phpunit.xml --coverage-text --colors=never ./tests
